{"version":3,"file":"index-5c6b901e.js","sources":["../../node_modules/chart.js/dist/chunks/helpers.segment.js","../../node_modules/chart.js/dist/chart.js","../../node_modules/react-chartjs-2/dist/index.js"],"sourcesContent":["/*!\n * Chart.js v4.0.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone$1(source) {\n    if (isArray(source)) {\n        return source.map(clone$1);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone$1(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone$1(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone$1(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set();\n    let i, ilen;\n    for(i = 0, ilen = items.length; i < ilen; ++i){\n        set.add(items[i]);\n    }\n    if (set.size === ilen) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let ticking = false;\n    return function(...args) {\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, args);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\nvar effects$1 = effects;\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  (value) : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\nfunction toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n function _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n         case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n         case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5;\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\n function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += font.lineHeight;\n    }\n    ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    ctx.lineTo(x + w, y + radius.topRight);\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */ function createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [\n    ''\n], rootScopes = scopes, fallback, getTarget = ()=>scopes[0]) {\n    if (!defined(fallback)) {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: rootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, rootScopes, fallback)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete target._keys;\n            delete scopes[0][prop];\n            return true;\n        },\n get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value;\n            delete target._keys;\n            return true;\n        }\n    });\n}\n function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete proxy[prop];\n            return true;\n        },\n get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n set (target, prop, value) {\n            proxy[prop] = value;\n            delete target[prop];\n            return true;\n        }\n    });\n}\n function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop];\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    value = value(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (defined(_context.index) && isIndexable(prop)) {\n        value = value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n                return fallback;\n            }\n        } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (defined(fallback) && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (defined(value)) {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (defined(value)) {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = deviceHeight / pixelRatio;\n    chart.width = deviceWidth / pixelRatio;\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction'), \n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone$1 as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects$1 as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.0.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, T as TAU, m as toPercentage, n as toDimension, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nexport { aL as Ticks, d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}function awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing'\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height1 = chartArea.h * weight;\n            const width1 = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width1, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width1, height1);\n            }\n            stack.start = x;\n            stack.placed += height1;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    active = false;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n    let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID1 = Object.keys(position)[0];\n            const value1 = position[positionAxisID1];\n            titleX = scales[positionAxisID1].getPixelForValue(value1) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = this.ticks.length;\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; ++i){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel = label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID1].getPixelForValue(value1));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret1 = this._getYAxisLabelAlignment(tl);\n            textAlign = ret1.textAlign;\n            x = ret1.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                x = this.chart.scales[positionAxisID1].getPixelForValue(value1);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                rotation,\n                label,\n                font,\n                color,\n                strokeColor,\n                strokeWidth,\n                textOffset,\n                textAlign: tickTextAlign,\n                textBaseline,\n                translation: [\n                    x,\n                    y\n                ],\n                backdrop\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        let i, ilen;\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            const item = items[i];\n            const tickFont = item.font;\n            const label = item.label;\n            let y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, item);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}function registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n} function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i1 = 0; i1 < local.length; i1++){\n        const plugin = local[i1];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, scaleOptions) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n    id = scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n    if (id) {\n        return id;\n    }\n    throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`,\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || [],\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}function getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.0.1\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i1 = 0, ilen1 = this.data.datasets.length; i1 < ilen1; ++i1){\n            this._updateDataset(i1, isFunction(mode) ? mode({\n                datasetIndex: i1\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\nvar Chart$1 = Chart;\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter1 = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter1.x, pCenter1.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter2.x, pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter3.x, pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = this.options.spacing / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference', \n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction createDefaultDatasetColorizer() {\n    return (dataset, i)=>{\n        dataset.borderColor = getBorderColor(i);\n        dataset.backgroundColor = getBackgroundColor(i);\n    };\n}\nfunction createDoughnutDatasetColorizer() {\n    let i = 0;\n    return (dataset)=>{\n        dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    };\n}\nfunction createPolarAreaDatasetColorizer() {\n    let i = 0;\n    return (dataset)=>{\n        dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    };\n}\nfunction getColorizer(type) {\n    if (type === 'doughnut' || type === 'pie') {\n        return createDoughnutDatasetColorizer();\n    } else if (type === 'polarArea') {\n        return createPolarAreaDatasetColorizer();\n    }\n    return createDefaultDatasetColorizer();\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { type , options: { elements  } , data: { datasets  }  } = chart.config;\n        if (containsColorsDefinitions(datasets) || elements && containsColorsDefinitions(elements)) {\n            return;\n        }\n        const colorizer = getColorizer(type);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox1 of hitboxes){\n                if (hitbox1.col !== col) {\n                    col = hitbox1.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox1.top = top;\n                hitbox1.left += this.left + padding;\n                hitbox1.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox1.left), hitbox1.width);\n                top += hitbox1.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColors = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.fillStyle = labelColors.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.setLineDash(labelColors.borderDash || []);\n            ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n            const borderRadius = toTRBLCorners(labelColors.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        ticks.push({\n            value: Math.round((niceMin + j * spacing) * factor) / factor\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const extra = getTickBackdropHeight(opts) / 2;\n    const outerDistance = scale.drawingArea;\n    const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n        const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n        const size = labelSizes[i];\n        const y = yForAngle(pointLabelPosition.y, size.h, angle);\n        const textAlign = getTextAlignForAngle(angle);\n        const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n        items.push({\n            x: pointLabelPosition.x,\n            y,\n            textAlign,\n            left,\n            top: y,\n            right: left + size.w,\n            bottom: y + size.h\n        });\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign , left , top , right , bottom  } = scale._pointLabelItems[i];\n        const { backdropColor  } = optsAtIndex;\n        if (!isNullOrUndef(backdropColor)) {\n            const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n            const padding = toPadding(optsAtIndex.backdropPadding);\n            ctx.fillStyle = backdropColor;\n            const backdropLeft = left - padding.left;\n            const backdropTop = top - padding.top;\n            const backdropWidth = right - left + padding.width;\n            const backdropHeight = bottom - top + padding.height;\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: backdropLeft,\n                    y: backdropTop,\n                    w: backdropWidth,\n                    h: backdropHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n            }\n        }\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  (parser)) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\nvar TimeSeriesScale$1 = TimeSeriesScale;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale$1\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales, \n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart$1 as Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, TimeScale, TimeSeriesScale$1 as TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import React, { forwardRef, useRef, useEffect } from 'react';\nimport { Chart as Chart$1, LineController, BarController, RadarController, DoughnutController, PolarAreaController, BubbleController, PieController, ScatterController } from 'chart.js';\n\nconst defaultDatasetIdKey = \"label\";\nfunction reforwardRef(ref, value) {\n    if (typeof ref === \"function\") {\n        ref(value);\n    } else if (ref) {\n        ref.current = value;\n    }\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets) {\n    let datasetIdKey = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : defaultDatasetIdKey;\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data) {\n    let datasetIdKey = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultDatasetIdKey;\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, \"dataset\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, \"nearest\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, \"index\", {\n        intersect: true\n    }, false);\n}\n\nfunction ChartComponent(param, ref) {\n    let { height =150 , width =300 , redraw =false , datasetIdKey , type , data , options , plugins =[] , fallbackContent , updateMode , ...props } = param;\n    const canvasRef = useRef(null);\n    const chartRef = useRef();\n    const renderChart = ()=>{\n        if (!canvasRef.current) return;\n        chartRef.current = new Chart$1(canvasRef.current, {\n            type,\n            data: cloneData(data, datasetIdKey),\n            options: options && {\n                ...options\n            },\n            plugins\n        });\n        reforwardRef(ref, chartRef.current);\n    };\n    const destroyChart = ()=>{\n        reforwardRef(ref, null);\n        if (chartRef.current) {\n            chartRef.current.destroy();\n            chartRef.current = null;\n        }\n    };\n    useEffect(()=>{\n        if (!redraw && chartRef.current && options) {\n            setOptions(chartRef.current, options);\n        }\n    }, [\n        redraw,\n        options\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current) {\n            setLabels(chartRef.current.config.data, data.labels);\n        }\n    }, [\n        redraw,\n        data.labels\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current && data.datasets) {\n            setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n        }\n    }, [\n        redraw,\n        data.datasets\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        if (redraw) {\n            destroyChart();\n            setTimeout(renderChart);\n        } else {\n            chartRef.current.update(updateMode);\n        }\n    }, [\n        redraw,\n        options,\n        data.labels,\n        data.datasets,\n        updateMode\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        destroyChart();\n        setTimeout(renderChart);\n    }, [\n        type\n    ]);\n    useEffect(()=>{\n        renderChart();\n        return ()=>destroyChart();\n    }, []);\n    return /*#__PURE__*/ React.createElement(\"canvas\", Object.assign({\n        ref: canvasRef,\n        role: \"img\",\n        height: height,\n        width: width\n    }, props), fallbackContent);\n}\nconst Chart = /*#__PURE__*/ forwardRef(ChartComponent);\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return /*#__PURE__*/ forwardRef((props, ref)=>/*#__PURE__*/ React.createElement(Chart, Object.assign({}, props, {\n            ref: ref,\n            type: type\n        })));\n}\nconst Line = /* #__PURE__ */ createTypedChart(\"line\", LineController);\nconst Bar = /* #__PURE__ */ createTypedChart(\"bar\", BarController);\nconst Radar = /* #__PURE__ */ createTypedChart(\"radar\", RadarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart(\"doughnut\", DoughnutController);\nconst PolarArea = /* #__PURE__ */ createTypedChart(\"polarArea\", PolarAreaController);\nconst Bubble = /* #__PURE__ */ createTypedChart(\"bubble\", BubbleController);\nconst Pie = /* #__PURE__ */ createTypedChart(\"pie\", PieController);\nconst Scatter = /* #__PURE__ */ createTypedChart(\"scatter\", ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n"],"names":["noop","__name","uid","id","isNullOrUndef","value","isArray","type","isObject","isNumberFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","toDimension","callback","fn","args","thisArg","each","loopable","reverse","i","len","keys","_elementsEqual","a0","a1","ilen","v0","v1","clone$1","source","target","klen","k","isValidKey","key","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","keyResolvers","v","o","_splitKey","parts","tmp","part","_getKeyResolver","obj","resolveObjectKey","_capitalize","str","defined","isFunction","setsEqual","a","b","item","_isClickEvent","e","PI","TAU","INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","x","y","epsilon","niceNum","range","roundedRange","niceRange","fraction","_factorize","result","sqrt","isNumber","n","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distanceBetweenPoints","pt1","pt2","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","min","max","_int16Range","_isBetween","_lookup","table","cmp","index","hi","lo","mid","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","method","base","res","object","unlistenArrayEvents","stub","listeners","_arrayUnique","items","set","requestAnimFrame","throttled","ticking","debounce","delay","timeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","atEdge","t","elasticIn","elasticOut","effects","effects$1","round","lim","l","h","p2b","n2b","b2n","n2p","map$1","hex","h1","h2","eq","isShort","hexParse","ret","alpha","f","hexString","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","hueValue","r","g","d","rgb2hsl","calln","c","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","p1","p2","rotate","deg","hslString","map","names$1","unpack","unpacked","tkeys","j","ok","nk","names","nameParse","RGB_RE","rgbParse","rgbString","to","from","interpolate","rgb1","rgb2","modHSL","ratio","clone","proto","fromObject","input","functionParse","Color","color","weight","c1","c2","w2","w1","val","index_esm","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","name","applyLayoutsDefaults","intlCache","getNumberFormat","locale","cacheKey","formatter","formatNumber","num","formatters","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","remain","Ticks","applyScaleDefaults","_ctx","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","context","ctx","targetScope","targetName","scopeObject","targetScopeObject","privateName","local","appliers","apply","toFontString","font","_measureText","data","gc","longest","string","textWidth","_longestText","arrayOfThings","cache","jlen","thing","nestedThing","gcLen","_alignPixel","chart","pixel","width","devicePixelRatio","halfWidth","clearCanvas","canvas","drawPoint","drawPointLegend","xOffset","yOffset","size","cornerRadius","xOffsetW","yOffsetW","style","rotation","radius","rad","_isPointInArea","point","area","margin","clipArea","unclipArea","renderText","text","opts","lines","stroke","line","setRenderOpts","drawBackdrop","decorateText","metrics","top","bottom","yDecoration","oldColor","addRoundedRectPath","rect","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","info","cacheable","_addGrace","minmax","grace","beginAtZero","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","_cached","_resolveWithPrefixes","getKeysFromAllScopes","storage","_attachContext","proxy","subProxy","descriptorDefaults","receiver","_resolveWithContext","_scriptable","_indexable","_allKeys","readKey","prefix","needsSubResolver","_proxy","_context","_subProxy","_resolveScriptable","_resolveArray","_stack","createSubResolver","isIndexable","arr","resolver","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_isDomSupported","_getParentNode","domNode","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","getCanvasPosition","touches","offsetX","offsetY","box","getRelativePosition","event","currentDevicePixelRatio","borderBox","paddings","borders","height","getContainerSize","maxWidth","maxHeight","container","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","supportsEventListenerOptions","passiveSupported","readUsedSize","getRightToLeftAdapter","rectX","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","restoreTextDirection","Animator","anims","date","callbacks","numSteps","remaining","draw","charts","cb","acc","cur","animator","transparent","interpolators","factor","c0","Animation","cfg","currentValue","elapsed","duration","loop","promises","rej","resolved","Animations","config","animationOptions","animatedProps","option","newOptions","resolveTargetOptions","animations","awaitAll","running","animation","properties","anim","scaleClip","scale","allowedOverflow","defaultClip","xScale","yScale","toClip","getSortedDatasetIndices","filterVisible","metasets","applyStack","stack","dsIndex","singleMode","datasetIndex","otherValue","convertObjectDataToArray","adata","isStacked","meta","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","updateStacks","controller","parsed","iScale","iAxis","vAxis","itemStacks","getFirstScaleId","axis","scales","createDatasetContext","createDataContext","clearStacks","isDirectUpdateMode","mode","cloneIfNotShared","cached","shared","createStack","canStack","DatasetController","dataset","chooseId","xid","yid","rid","indexAxis","iid","vid","scaleID","_data","resetNewElements","stackChanged","oldStacked","scopeKeys","count","_stacked","sorted","prev","isNotInOrderComparedToPrev","labels","singleScale","xAxisKey","yAxisKey","parsedValue","_parsed","otherScale","otherMin","otherMax","_skip","elements","active","drawActiveElementsOnTop","elementType","sharing","transition","sharedOptions","firstOpts","previouslySharedOptions","includeOptions","arg1","arg2","numMeta","numData","move","removed","newCount","__publicField","getAllScaleValues","visibleMetas","computeMinSampleSize","curr","updateMinAndPrev","computeFitCategoryTraits","ruler","stackCount","thickness","computeFlexCategoryTraits","pixels","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","borderProps","setBorderSkipped","edge","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","reset","horizontal","vpixels","ipixels","dataIndex","skipNull","barThickness","baseValue","minBarLength","floating","length","head","startPixel","endPixel","halfGrid","maxBarThickness","center","stackIndex","rects","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","getter","chartArea","arcs","spacing","maxSize","chartWeight","maxRadius","outerRadius","innerRadius","radiusLength","animationOpts","centerX","centerY","animateScale","arc","metaData","total","ringWeightOffset","pointStyle","label","legendItem","legend","abstract","DateAdapterBase","members","adapters","binarySearch","metaset","intersect","_sorted","lookupMethod","evaluateInteractionItems","position","handler","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","includeInvisible","getNearestRadialItems","evaluationFunc","getNearestCartesianItems","distanceMetric","minDistance","inRange","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","buildLayoutBoxes","centerHorizontal","centerVertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","newHeight","widthChanged","heightChanged","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","changed","same","other","setBoxDims","placeBoxes","userPadding","height1","width1","layoutItem","minPadding","padding","availableWidth","availableHeight","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","BasePlatform","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","isNullOrEmpty","initCanvas","renderHeight","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","nodeListContains","nodeList","createAttachObserver","observer","entries","trigger","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","releaseObserver","createProxyAndListen","DomPlatform","initial","proxies","_detectPlatform","Element","final","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","majorIndices","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","skip","offset","tickLength","maxScale","maxChart","evenMajorSpacing","getEvenSpacing","factors","majorStart","majorEnd","diff","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","tick","titleAlign","titleArgs","titleX","titleY","positionAxisID","positionAxisID1","value1","Scale","raw","_userMin","_userMax","_suggestedMin","_suggestedMax","metas","sampleSize","samplingEnabled","reversePixels","numTicks","minRotation","maxRotation","labelRotation","tickWidth","maxLabelDiagonal","labelSizes","maxLabelWidth","maxLabelHeight","minSize","titleOpts","gridOpts","display","isHorizontal","titleHeight","widest","highest","tickPadding","angleRadians","cos","sin","labelHeight","labelWidth","isRotated","labelsBelowTicks","offsetLeft","offsetRight","paddingLeft","paddingRight","paddingTop","paddingBottom","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","lineHeight","nestedLabel","valueAt","idx","decimal","optionTicks","rot","grid","border","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineWidth","lineColor","borderDash","borderDashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","mirror","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","ret1","halfCount","strokeColor","strokeWidth","tickTextAlign","backdrop","labelPadding","backgroundColor","drawLine","lastLineWidth","title","tz","gz","bz","axisID","fontSize","TypedRegistry","override","parentScope","isIChartComponent","registerDefaults","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","typedRegistry","arg","reg","itemReg","registry","component","camelMethod","PluginService","hook","filter","descriptor","plugin","all","plugins","allPlugins","createDescriptors","previousDescriptors","localIds","i1","getOpts","pluginOpts","getIndexAxis","datasetDefaults","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","datasetType","mainScope","resetCache","_scopeCache","keyLists","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","isScriptable","scriptable","indexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onAnimationProgress","getCanvas","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getDatasetArea","Chart$1","_a","invalidatePlugins","userConfig","initialCanvas","existingChart","maintainAspectRatio","_aspectRatio","newSize","newRatio","scalesOptions","axisOptions","scaleOpts","updated","isRadial","scaleType","scaleClass","hasUpdated","datasets","newControllers","ControllerClass","datasetElementType","dataElementType","animsDisabled","_active","_lastEvent","existingEvents","newEvents","_hiddenIndices","changes","_dataChanges","datasetCount","makeSet","changeSet","noArea","ilen1","layers","clip","useClip","visible","platform","_add","_remove","detached","attached","enabled","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","Chart","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","rThetaToXY","theta","pathArc","circular","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStart","outerEnd","innerStart","innerEnd","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","pCenter1","innerMidAdjustedAngle","pCenter2","p8","pCenter3","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","drawBorder","borderWidth","borderJoinStyle","inner","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","enableBorderRadius","maxR","enableBorder","boundingRects","bounds","skipX","skipY","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","borderColor","outer","addRectPath","mouseX","mouseY","getBoxSize","labelOpts","boxHeight","boxWidth","itemsEqual","Legend","legendItems","labelFont","itemHeight","hitboxes","lineWidths","totalHeight","row","_itemHeight","columnSizes","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","rtlHelper","hitbox","hitbox1","defaultColor","halfFontSize","cursor","drawLegendBox","drawOptions","yBoxTop","xBoxLeft","borderRadius","fillText","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","previous","sameItem","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_args","ci","usePointStyle","useBorderRadius","positioners","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","bodyLineHeight","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","caretSize","caretPadding","topLeft","topRight","bottomLeft","bottomRight","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","labelCount","tooltipItem","invokeCallbackWithFallback","Tooltip","beforeTitle","afterTitle","bodyItems","scoped","beforeFooter","afterFooter","labelColors","labelPointStyles","labelTextColors","positionAndSize","backgroundPoint","tooltipPoint","caretPosition","ptX","ptY","x3","y3","pt","titleSpacing","labelPointStyle","colorX","rtlColorX","yOffSet","colorY","outerX","innerX","bodySpacing","bodyAlign","displayColors","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","tooltipSize","animX","animY","opacity","hasTooltipContent","positionChanged","caretX","caretY","plugin_tooltip","addIfString","addedLabels","findOrAddLabel","_getLabelForValue","CategoryScale","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","setMin","setMax","minSign","maxSign","maxTicksLimit","stepSize","numericGeneratorOptions","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","minExp","exp","significand","lastTick","LogarithmicScale","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","pointLabelOpts","additionalAngle","pointPosition","plFont","textSize","hLimits","vLimits","updateLimits","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","pointLabels","backdropColor","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","scaledDistance","pointLabel","distanceFromCenter","angleLines","INTERVALS","UNITS","sorter","parse","adapter","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","major","ticksFromTimestamps","TimeScale","_applyBounds","timeOpts","minor","weekday","hasWeekday","format","formats","minorFormat","majorFormat","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","displayFormats","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","defaultDatasetIdKey","reforwardRef","ref","setOptions","nextOptions","Object","assign","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","arguments","addedDatasets","nextDataset","currentDataset","find","includes","push","cloneData","nextData","ChartComponent","param","redraw","fallbackContent","updateMode","canvasRef","useRef","chartRef","renderChart","destroyChart","destroy","useEffect","setTimeout","update","_jsx","role","forwardRef","createTypedChart","registerables","register","Bar","Doughnut"],"mappings":"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"}