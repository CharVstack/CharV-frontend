{"version":3,"file":"VmControlMenu.stories-db42b9e7.js","sources":["../../node_modules/@mui/icons-material/KeyboardArrowDown.js","../../node_modules/memoize-one/dist/memoize-one.esm.js","../../src/components/organisms/Menu/VmControlMenu.tsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.41 8.59 12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\"\n}), 'KeyboardArrowDown');\nexports.default = _default;","var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var cache = null;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (cache && cache.lastThis === this && isEqual(newArgs, cache.lastArgs)) {\n            return cache.lastResult;\n        }\n        var lastResult = resultFn.apply(this, newArgs);\n        cache = {\n            lastResult: lastResult,\n            lastArgs: newArgs,\n            lastThis: this,\n        };\n        return lastResult;\n    }\n    memoized.clear = function clear() {\n        cache = null;\n    };\n    return memoized;\n}\n\nexport { memoizeOne as default };\n","import { getSWRDefaultKey } from '@aspida/swr';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport PowerSettingsNewIcon from '@mui/icons-material/PowerSettingsNew';\nimport { Box } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport memoizeOne from 'memoize-one';\nimport { useState, useMemo } from 'react';\nimport { mutate } from 'swr';\n\nimport { VmPowerActions } from '@api-hooks/v1/@types';\nimport { useSelectedVmReadOnlyAtom } from '@components/organisms/Tables';\nimport { apiClient } from '@lib/apiClient';\n\ntype BaseVmControlMenuProps = {\n  vms: string[];\n};\n\nconst useSubmitHandlerFactory = (vms: string[], handleClose: () => void) => {\n  const submitHandlerFactory = useMemo(\n    () =>\n      memoizeOne((action: VmPowerActions) => async () => {\n        await Promise.all(\n          vms.map(async (vm) => {\n            await apiClient.api.v1.vms\n              ._vmId(vm)\n              .power.$post({ body: { action } })\n              .then(async () => {\n                await mutate(getSWRDefaultKey(apiClient.api.v1.vms._vmId(vm)));\n                handleClose();\n              })\n              .catch(() => {\n                handleClose();\n              });\n          })\n        );\n      }),\n    [vms, handleClose]\n  );\n  return submitHandlerFactory;\n};\n\nexport const VmControlMenu = () => {\n  const vms = useSelectedVmReadOnlyAtom();\n\n  return <BaseVmControlMenu vms={vms} />;\n};\n\nexport const BaseVmControlMenu = ({ vms }: BaseVmControlMenuProps) => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleSubmitFactory = useSubmitHandlerFactory(vms, handleClose);\n\n  return (\n    <>\n      <Button\n        disabled={vms.length === 0}\n        variant=\"contained\"\n        onClick={handleClick}\n        color=\"success\"\n        endIcon={<KeyboardArrowDownIcon />}\n        startIcon={<PowerSettingsNewIcon />}\n      >\n        Actions\n      </Button>\n      <Menu anchorEl={anchorEl} open={open} onClose={handleClose}>\n        <Box sx={{ width: 180 }}>\n          <MenuItem onClick={handleSubmitFactory('start')} disableRipple>\n            Start\n          </MenuItem>\n          <MenuItem onClick={handleSubmitFactory('shutdown')} disableRipple>\n            Shutdown\n          </MenuItem>\n          <MenuItem onClick={handleSubmitFactory('reboot')} disableRipple>\n            Restart\n          </MenuItem>\n        </Box>\n      </Menu>\n    </>\n  );\n};\n"],"names":["_interopRequireDefault","require$$0","KeyboardArrowDown","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","_default","safeIsNaN","__name","value","isEqual","first","second","areInputsEqual","newInputs","lastInputs","i","memoizeOne","resultFn","cache","memoized","newArgs","_i","lastResult","useSubmitHandlerFactory","vms","handleClose","useMemo","action","vm","apiClient","mutate","getSWRDefaultKey","BaseVmControlMenu","anchorEl","setAnchorEl","useState","open","handleClick","event","handleSubmitFactory","_jsxs","_Fragment","_jsx","Button","KeyboardArrowDownIcon","PowerSettingsNewIcon","Menu","MenuItem"],"mappings":"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"}