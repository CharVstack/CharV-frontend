{"version":3,"file":"CalcUnitSize-c7e878b4.js","sources":["../../src/utils/CalcUnitSize/CalcUnitSize.tsx"],"sourcesContent":["export const calcUnitSize = (byteSize: number, significant = 0): [string, number] => {\n  const KiB = 1024;\n  const MiB = KiB ** 2;\n  const GiB = KiB ** 3;\n  const TiB = KiB ** 4;\n\n  if (byteSize >= TiB) {\n    const unit = 'TiB';\n    const calculatedSize = Math.ceil(byteSize / TiB);\n\n    if (calculatedSize.toString().length >= significant) {\n      return [unit, calculatedSize];\n    }\n  }\n  if (byteSize >= GiB) {\n    const unit = 'GiB';\n    const calculatedSize = Math.ceil(byteSize / GiB);\n\n    if (calculatedSize.toString().length >= significant) {\n      return [unit, calculatedSize];\n    }\n  }\n  if (byteSize >= MiB) {\n    const unit = 'MiB';\n    const calculatedSize = Math.ceil(byteSize / MiB);\n\n    if (calculatedSize.toString().length >= significant) {\n      return [unit, calculatedSize];\n    }\n  }\n  if (byteSize >= KiB) {\n    const unit = 'KiB';\n    const calculatedSize = Math.ceil(byteSize / KiB);\n\n    if (calculatedSize.toString().length >= significant) {\n      return [unit, calculatedSize];\n    }\n  }\n  const unit = 'B';\n  return [unit, byteSize];\n};\n"],"names":["calcUnitSize","__name","byteSize","significant","TiB","unit","calculatedSize","Math","ceil","toString","length","GiB","MiB","KiB"],"mappings":"+EAAO,MAAMA,EAAeC,EAAA,CAACC,EAAkBC,EAAc,IAAwB,CAMnF,GAAID,GAAYE,cAAK,CACnB,MAAMC,EAAO,MACPC,EAAiBC,KAAKC,KAAKN,EAAWE,aAAG,EAE/C,GAAIE,EAAeG,WAAWC,QAAUP,EAC/B,MAAA,CAACE,EAAMC,CAAc,CAEhC,CACA,GAAIJ,GAAYS,WAAK,CACnB,MAAMN,EAAO,MACPC,EAAiBC,KAAKC,KAAKN,EAAWS,UAAG,EAE/C,GAAIL,EAAeG,WAAWC,QAAUP,EAC/B,MAAA,CAACE,EAAMC,CAAc,CAEhC,CACA,GAAIJ,GAAYU,QAAK,CACnB,MAAMP,EAAO,MACPC,EAAiBC,KAAKC,KAAKN,EAAWU,OAAG,EAE/C,GAAIN,EAAeG,WAAWC,QAAUP,EAC/B,MAAA,CAACE,EAAMC,CAAc,CAEhC,CACA,GAAIJ,GAAYW,KAAK,CACnB,MAAMR,EAAO,MACPC,EAAiBC,KAAKC,KAAKN,EAAWW,IAAG,EAE/C,GAAIP,EAAeG,WAAWC,QAAUP,EAC/B,MAAA,CAACE,EAAMC,CAAc,CAEhC,CAEO,MAAA,CADM,IACCJ,CAAQ,CACxB,EAxC4B"}